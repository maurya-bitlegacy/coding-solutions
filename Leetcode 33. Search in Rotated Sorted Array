class Solution {
    public int search(int[] nums, int target) {
        int low = 0;
        int high = nums.length-1;
        
        while(low<=high){ // Search for the smallest element
            int mid = low + (high-low)/2;
            if(nums[mid]>nums[nums.length-1]) // Smallest element will definitely lie in the second half
                low=mid+1;
            else
                high=mid-1;
        }
        if(target==nums[low])
            return low;
        else if(target>nums[low] && target<=nums[nums.length-1])
        {
            high = nums.length-1; // Search in the second half
        }
        else{
            high = low; // Search in the first half
            low = 0;
        }
        while(low<=high){ // Normal binary search
            int mid = low + (high-low)/2;
            if(nums[mid]==target)
                return mid;
            else if(nums[mid]>target)
                high = mid-1;
            else
                low = mid+1;
        }
        return -1;
}
}
